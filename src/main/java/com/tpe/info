spring.datasource.url=jdbc:postgresql://localhost:5432/sboot_intro_db->bilgi kaynagimin adresi
spring.datasource.username=db_user-> kullanbilmem icin user
spring.datasource.password=db_password->kullanbilmem icin paasword
spring.jpa.show-sql=true-> default degeri false kodu göremem olmazsa
spring.jpa.hibernate.ddl-auto=update->güncellme
spring.jpa.properties.hibarnate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true-> kargacik burgacik yazi olmasin



server:
  port: 8081
  error:
    include-binding-errors: always
    include-message: always
    include-stacktrace: never

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/sboot_intro_db
    username: dev_user
    password: dev_password

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      '[hibernate.format_sql]': true
logging:   #logging
  file:
    name: log/studentapp.log
  pattern:
    file: "%d %-5level [%thread] %logger:%msg%n"
  level:
    '[org.springframework.web]': WARN
    '[org.hibernate]': INFO
    '[com.tpe]': INFO




    1. olabilecek hatalar
    1.pom.xml
    2.ymlveya roperties
    3.postgr baglantisi
    4.server yanlis yazilmis olabilir


    Autjentication -> kimsin sisteme kendini tanitiyorsun
    Authorization--> yetkin var mi?-> rol bazli tanitiyorsun
    securuty katmani gelince base64 bilgi gelmesi gerekiyor
    entcode -> ediliyorse record da edilir (tersi alinir)
    client server'i bilmez , server client'i bilmez
    securuty yükleince bazi sorumluluklar geliyor
    spring securuty
    User --> UserDetails(Bean olarak ekliyorum)
    Role--> GrantedAuthority(Bean olarak ekliyorum)
    UserService--> UserDetailService
configurasyonda bu 3 securuty class'larini olusturacagiz